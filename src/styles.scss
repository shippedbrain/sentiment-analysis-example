@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800;900&display=swap");
@import url("../node_modules/material-design-icons/iconfont/material-icons.css");

:root {
    font-size: 17px;
}

$font-primary: "Poppins", sans-serif;

$border-radius: 5px;
$border-radius-lg: 15px;

// Colors
$color-white: #fff;
$color-magenta: #e0115f;
$color-magenta-dark: #c40645;
$color-red: #e61045;
$color-green: #12a592;
$color-dark: #222831;
$color-grey-light: rgba(129, 157, 163, 0.2);
$color-grey: #819da3;
$color-grey-darkened: darken($color-grey, 15%);
$color-eggshell: #f9f8fd;
$color-twitter-blue: #1da1f2;

$colors: (
    "white": $color-white,
    "magenta": $color-magenta,
    "magenta-dark": $color-magenta-dark,
    "red": $color-red,
    "green": $color-green,
    "dark": $color-dark,
    "grey-light": $color-grey-light,
    "grey-darkened": $color-grey-darkened,
    "twitter-blue": $color-twitter-blue
);

$borders-rounded: (
    "rounded": $border-radius,
    "rounded-lg": $border-radius-lg,
);

$shadow-regular: 0px 0px 10px 4px $color-grey-light;

$opacity-base: 0.1;
$opacity-hover: 0.7;

$transition-sm: all 0.1s linear;
$transition-md: all 0.25s ease-in-out;

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

html {
    scroll-behavior: smooth;
}

body {
    font-family: $font-primary;
    position: relative;
    min-height: 100vh;
    padding-top: 8rem;
    background: $color-white;
    background-repeat: no-repeat;
    background-attachment: fixed;
    background-position: center;
    color: $color-dark !important;
    transition: $transition-md;
}

.full-height {
    min-height: 100vh;
}

// Firefox scrollbar
* {
    scrollbar-width: auto;
    scrollbar-color: $color-magenta $color-grey;
}

::-webkit-scrollbar {
    width: 1rem;
}

::-webkit-scrollbar-track {
    background: $color-grey;
}

::-webkit-scrollbar-thumb {
    background: $color-magenta;

    &:hover {
        background: $color-magenta-dark;
    }
}

.pointer {
    cursor: pointer;
}

// Margin and padding
@for $item from 0 to 11 {
    @each $abbr, $value in ("t": "top", "r": "right", "b": "bottom", "l": "left") {
        .m#{$abbr}-#{$item} {
            margin-#{$value}: #{$item}rem;
        }

        .p#{$abbr}-#{$item} {
            padding-#{$value}: #{$item}rem;
        }

        .m#{$abbr}-#{$item}-imp {
            margin-#{$value}: #{$item}rem !important;
        }

        .p#{$abbr}-#{$item}-imp {
            padding-#{$value}: #{$item}rem !important;
        }

        @for $sub-value from 1 to 10 {
            .m#{$abbr}-#{$item}-#{$sub-value} {
                margin-#{$value}: #{$item + "." + #{$sub-value}}rem;
            }
        }
    }

    .m-#{$item} {
        margin: #{$item}rem;
    }

    .p-#{$item} {
        padding: #{$item}rem;
    }

    .mx-#{$item} {
        margin: 0 #{$item}rem;
    }

    .my-#{$item} {
        margin: #{$item}rem 0;
    }

    .px-#{$item} {
        padding: 0 #{$item}rem;
    }

    .py-#{$item} {
        padding: #{$item}rem 0;
    }

    .m-#{$item}-imp {
        margin: #{$item}rem !important;
    }

    .p-#{$item}-imp {
        padding: #{$item}rem !important;
    }

    .mx-#{$item}-imp {
        margin: 0 #{$item}rem !important;
    }

    .my-#{$item}-imp {
        margin: #{$item}rem 0 !important;
    }

    .px-#{$item}-imp {
        padding: 0 #{$item}rem !important;
    }

    .py-#{$item}-imp {
        padding: #{$item}rem 0 !important;
    }
}

.btn {
    display: inline-block;
    font-family: inherit;
    position: relative;
    text-align: center;
    cursor: pointer;
    padding: 0.5rem 1rem;
    font-size: 0.8rem;
    min-width: 5rem;
    max-height: 2rem;
    border: none;
    border-radius: $border-radius;
    transition: $transition-md;

    &.btn-sm {
        padding: 0.4rem 0.7rem;
    }

    &.btn-arrow {
        &::after {
            opacity: 0;
            right: -0.1rem;
            transition: $transition-md;
        }

        &:hover::after {
            font-family: "Material Icons";
            content: "arrow_forward";
            position: absolute;
            right: 40%;
            top: 35%;
            animation: moveArrow 0.7s linear 0s infinite alternate forwards;
        }
    }

    &:disabled {
        cursor: not-allowed;
    }

    &.btn-loading {
        animation: rainbow 3s ease-in-out 0s infinite alternate;
    }

    .material-icons {
        font-size: 0.8rem;

        &.spin {
            font-size: 1.5rem;
            position: relative;
            top: -5px;
        }
    }
}

@each $name in ("top", "right", "bottom", "left") {
    .border-#{$name} {
        border: none;
        border-#{$name}-width: 5px;
        border-#{$name}-style: solid;
    }
}

.border {
    border-width: 2px;
    border-style: solid;
}

// Colors
@each $name, $color in $colors {
    .color-#{$name} {
        color: $color;
    }

    .bg-#{$name} {
        background-color: $color;
    }

    .border-#{$name} {
        border-color: #{$color} !important;
    }

    @each $nameBorder, $value in ("top": "t", "right": "r", "bottom": "b", "left": "l") {
        .border-#{$value}-#{$name} {
            border-#{$nameBorder}-color: #{$color} !important;
        }
    }

    .btn-#{$name} {
        background-color: transparent;
        border: 1px solid $color;
        color: $color;

        &:hover,
        &:focus {
            background-color: $color;
            color: $color-white;
        }
    }

    .btn-solid-#{$name} {
        background-color: lighten($color, 10%);

        &:hover,
        &:focus {
            background-color: $color;
        }
    }
}

// Border radius
@each $name, $value in $borders-rounded {
    .border-#{$name} {
        border-radius: #{$value};
    }
}

// Width and height
@for $item from 0 to 21 {
    .w-#{$item * 5} {
        width: #{$item * 5%};
    }

    .h-#{$item * 5} {
        height: #{$item * 5%};
    }
}

// Text align
@each $value in ("center", "right", "left", "justify") {
    .text-#{$value} {
        text-align: #{$value};
    }
}

// Font weight
@each $value in (bold, bolder, lighter, normal) {
    .font-#{$value} {
        font-weight: $value;
    }
}

// Font size
@for $value from 0 to 21 {
    .font-size-#{$value} {
        font-size: #{$value}rem;
    }

    @for $sub-value from 1 to 10 {
        .font-size-#{$value}-#{$sub-value} {
            font-size: #{$value + "." + #{$sub-value}}rem;
        }
    }
}

// Display
@each $value in ("inline", "block", "flex", "grid", "inline-block", "inline-flex", "none") {
    .d-#{$value} {
        display: #{$value};
    }
}

// Justify
@each $value in ("flex-start", "flex-end", "center", "space-between", "space-around", "initial") {
    .justify-content-#{$value} {
        justify-content: #{$value};
    }
}

// Align items
@each $value in ("baseline", "center", "end", "flex-end", "flex-start") {
    .align-items-#{$value} {
        align-items: #{$value};
    }

    .align-self-#{$value} {
        align-self: #{$value};
    }
}

.icon-lg {
    font-size: 5rem;
}

.container {
    width: 90%;
    margin: auto;
}
a {
    text-decoration: none;
}

.link {
    cursor: pointer;
}

// Styles for link
@mixin link {
    position: relative;
    color: $color-grey;
    border-bottom: 2px solid transparent;
    transition: $transition-md;

    &.link-magenta {
        color: $color-magenta;
    }

    &::before {
        position: absolute;
        content: "";
        display: block;
        width: 100%;
        height: 2px;
        background: $color-magenta;
        left: 0;
        bottom: -2px;
        transform-origin: left;
        transform: scale(0);
        transition: $transition-md;
    }

    &:hover {
        color: $color-magenta;

        &::before {
            transform: scale(1);
        }
    }

    .material-icons {
        margin-right: 0.5rem;
    }
}

.link,
.showcase-description a {
    @include link();
}

.brand {
    font-size: 1rem;
    font-weight: bolder;
    color: $color-dark;

    span {
        transition: $transition-md;

        &.brand-primary {
            color: $color-grey-darkened;
        }

        &.brand-alt {
            color: $color-magenta;
        }
    }

    &:hover,
    &:focus {
        @for $value from 1 to 20 {
            .brand-primary:nth-child(#{$value}) {
                color: $color-magenta;
                transition-delay: #{$value * 0.03s};
            }

            .brand-alt:nth-child(#{$value}) {
                color: $color-grey-darkened;
                transition-delay: #{$value * 0.03s};
            }
        }
    }
}

.navbar {
    width: 100%;
    position: fixed;
    top: 0;
    z-index: 1;
    background-color: $color-white;
    border-bottom: 1px solid rgba($color-grey, 0.3);
    transition: $transition-md;

    .nav-items-container {
        display: flex;
        justify-content: space-between;
        align-items: center;

        .nav-item {
            padding: 1rem 0rem;
            transition: $transition-md;

            .nav-title {
                font-weight: bold;
            }

            .nav-link {
                position: relative;
                display: inline-block;
                text-align: center;
                font-size: 0.9rem;
                padding: 0.4rem 0.7rem;
                color: $color-grey-darkened;
                transition: $transition-md;

                &-magenta {
                    color: $color-magenta;
                }

                &:hover,
                &.pre-active {
                    color: $color-magenta;
                    background-color: $color-grey-light;
                    border-radius: $border-radius;
                }

                &.pre-active:hover {
                    color: $color-white;
                    background-color: $color-magenta;
                }
            }
        }
    }
}

.fade-in {
    opacity: 0;
    animation: fadeIn 0.25s ease-in-out 0s 1 forwards;
}

@for $item from 1 to 31 {
    .fade-in:nth-child(#{$item}) {
        animation-delay: #{$item * 0.05s};
    }
}

hr {
    border-top: 1px solid $color-grey-light;
}

details {
    summary {
        font-weight: bold;
        color: $color-dark;
        cursor: pointer;
        padding: 0.2rem;
        display: flex !important;
        align-items: center;
        transition: $transition-md;

        .material-icons {
            transition: $transition-md;
        }
    }

    &[open] {
        summary {
            color: $color-magenta !important;

            .material-icons {
                transform: rotate(180deg);
            }
        }
    }
}

footer {
    font-weight: bold;
    background-color: $color-eggshell;
    color: $color-white;
    margin-top: 2rem;
}

pre {
    width: 100%;
    overflow: auto;
}

.code,
.prettyprint {
    font-size: 0.8rem;
    padding: 1rem 3rem 1rem 1rem !important;
    background-color: $color-dark;
    color: $color-white;
    border: none !important;
    border-radius: $border-radius;
    width: 100%;
    max-height: 20rem;
    overflow: auto;
    white-space: pre-wrap;
    word-wrap: break-word;

    &.code-light {
        color: $color-dark;
    }

    &.prettyprint-fit-height {
        min-height: 20rem;
    }

    &.sm {
        border-radius: $border-radius;
    }

    .pln,
    .kwd {
        color: $color-white;
    }

    .pun {
        color: $color-white;
    }

    .str,
    .com {
        color: $color-white;
    }

    .lit {
        color: $color-white;
    }
}

.code-container {
    position: relative;

    .form-control {
        padding: 1rem !important;
    }

    textarea {
        height: 20rem;
    }

    .options-container {
        position: absolute;
        top: 0;
        right: 1.5rem;
        margin-top: 0.7rem;

        .option {
            color: $color-white;
            margin-right: 0.5rem;
            cursor: pointer;

            &.option-dark {
                color: $color-dark;
            }

            &.tooltip {
                .tooltip-text {
                    left: 150%;
                    margin-bottom: 1rem;
                    padding: 0.5em 0.7rem;
                }
            }
        }
    }
}

.rainbow-color {
    animation: rainbowColor 3s ease-in-out 0s infinite alternate;
}

.alert {
    display: flex;
    align-items: flex-start;
    font-size: 0.8rem;
    margin: 1rem 0rem;
    padding: 1rem 0.7rem;
    border-radius: $border-radius;

    &-center {
        justify-content: center;
        align-items: center;
    }

    &-sm {
        margin: 0;
        padding: 0.5rem;
    }

    &-xs {
        margin: 0;
        padding: 0.2rem;
    }

    &-lg {
        font-size: 1.2rem;
    }

    .material-icons {
        font-size: 1.5rem;
        margin-right: 0.8rem;
        align-self: flex-start;
    }

    @each $name, $color in $colors {
        &.alert-#{$name} {
            color: darken($color, 8%);
            background-color: rgba($color, 0.1);
        }
    }
}

@keyframes rainbow {
    0% {
        background-color: $color-magenta;
    }
    50% {
        background-color: $color-green;
    }
    100% {
        background-color: $color-red;
    }
}

@keyframes rainbowColor {
    0% {
        color: $color-grey-darkened;
    }
    50% {
        color: $color-dark;
    }
    100% {
        color: $color-magenta-dark;
    }
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}

@keyframes moveArrow {
    from {
        opacity: 0;
        transform: translateX(0rem);
    }
    to {
        opacity: 1;
        transform: translateX(0.2rem);
    }
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}